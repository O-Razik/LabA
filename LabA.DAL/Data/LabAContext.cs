// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

using LabA.DAL.Models;

namespace LabA.DAL.Data;

public partial class LabAContext : DbContext
{
    public LabAContext() { }

    public LabAContext(DbContextOptions<LabAContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Analysis> Analyses { get; set; }

    public virtual DbSet<AnalysisBiomaterial> AnalysisBiomaterials { get; set; }

    public virtual DbSet<AnalysisCategory> AnalysisCategories { get; set; }

    public virtual DbSet<AnalysisResult> AnalysisResults { get; set; }

    public virtual DbSet<Biomaterial> Biomaterials { get; set; }

    public virtual DbSet<City> Cities { get; set; }

    public virtual DbSet<Client> Clients { get; set; }

    public virtual DbSet<Day> Days { get; set; }

    public virtual DbSet<Employee> Employees { get; set; }

    public virtual DbSet<Laboratory> Laboratories { get; set; }

    public virtual DbSet<LaboratorySchedule> LaboratorySchedules { get; set; }

    public virtual DbSet<Order> Orders { get; set; }

    public virtual DbSet<OrderAnalysis> OrderAnalyses { get; set; }

    public virtual DbSet<Position> Positions { get; set; }

    public virtual DbSet<Schedule> Schedules { get; set; }

    public virtual DbSet<Sex> Sexes { get; set; }

    public virtual DbSet<Status> Statuses { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Analysis>(entity =>
        {
            entity.HasKey(e => e.AnalysisId).HasName("PK__Analysis__5B14DE5A838828C8");

            entity.ToTable("Analysis");

            entity.Property(e => e.AnalysisId).HasColumnName("analysis_id");
            entity.Property(e => e.CategoryId).HasColumnName("category_id");
            entity.Property(e => e.Description)
                .HasColumnType("text")
                .HasColumnName("description");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("name");
            entity.Property(e => e.Price)
                .HasDefaultValueSql("((0.00))")
                .HasColumnName("price");

            entity.HasOne(d => d.Category).WithMany(p => p.Analyses)
                .HasForeignKey(d => d.CategoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_category_id");
        });

        modelBuilder.Entity<AnalysisBiomaterial>(entity =>
        {
            entity.HasKey(e => e.AnalysisBiomaterialId).HasName("PK__Analysis__2DEF0DADDFD6F337");

            entity.ToTable("AnalysisBiomaterial");

            entity.Property(e => e.AnalysisBiomaterialId).HasColumnName("analysis_biomaterial_id");
            entity.Property(e => e.AnalysisId).HasColumnName("analysis_id");
            entity.Property(e => e.BiomaterialId).HasColumnName("biomaterial_id");

            entity.HasOne(d => d.Analysis).WithMany(p => p.AnalysisBiomaterials)
                .HasForeignKey(d => d.AnalysisId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_analysis_id");

            entity.HasOne(d => d.Biomaterial).WithMany(p => p.AnalysisBiomaterials)
                .HasForeignKey(d => d.BiomaterialId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_biomaterial_id");
        });

        modelBuilder.Entity<AnalysisCategory>(entity =>
        {
            entity.HasKey(e => e.AnalysisCategoryId).HasName("PK__Analysis__D4EA890FC543AD84");

            entity.ToTable("AnalysisCategory");

            entity.HasIndex(e => e.CategoryName, "UQ__Analysis__5189E255B9E48CC4").IsUnique();

            entity.Property(e => e.AnalysisCategoryId)
                .ValueGeneratedNever()
                .HasColumnName("analysis_category_id");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("category_name");
        });

        modelBuilder.Entity<AnalysisResult>(entity =>
        {
            entity.HasKey(e => e.AnalysisResultId).HasName("PK__Analysis__6FC2B77061BEA6B7");

            entity.ToTable("AnalysisResult");

            entity.Property(e => e.AnalysisResultId).HasColumnName("analysis_result_id");
            entity.Property(e => e.Description)
                .HasColumnType("text")
                .HasColumnName("description");
            entity.Property(e => e.ExecutionDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("execution_date");
            entity.Property(e => e.Indicator).HasColumnName("indicator");
            entity.Property(e => e.OrderAnalysisId).HasColumnName("order_analysis_id");

            entity.HasOne(d => d.OrderAnalysis).WithMany(p => p.AnalysisResults)
                .HasForeignKey(d => d.OrderAnalysisId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_order_analysis_id");
        });

        modelBuilder.Entity<Biomaterial>(entity =>
        {
            entity.HasKey(e => e.BiomaterialId).HasName("PK__Biomater__E29C3F479E31B628");

            entity.ToTable("Biomaterial");

            entity.HasIndex(e => e.BiomaterialName, "UQ__Biomater__1AE1CA282AF83D71").IsUnique();

            entity.Property(e => e.BiomaterialId).HasColumnName("biomaterial_id");
            entity.Property(e => e.BiomaterialName)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("biomaterial_name");
        });

        modelBuilder.Entity<City>(entity =>
        {
            entity.HasKey(e => e.CityId).HasName("PK__City__031491A892EDE789");

            entity.ToTable("City");

            entity.HasIndex(e => e.CityName, "UQ__City__1AA4F7B56E3DBC18").IsUnique();

            entity.Property(e => e.CityId).HasColumnName("city_id");
            entity.Property(e => e.CityName)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("city_name");
        });

        modelBuilder.Entity<Client>(entity =>
        {
            entity.HasKey(e => e.ClientId).HasName("PK__Client__BF21A4246F8063D9");

            entity.ToTable("Client");

            entity.HasIndex(e => e.PhoneNumber, "UQ__Client__A1936A6BA5151CE3").IsUnique();

            entity.HasIndex(e => e.Email, "UQ__Client__AB6E6164A3F10E6E").IsUnique();

            entity.Property(e => e.ClientId).HasColumnName("client_id");
            entity.Property(e => e.Birthdate).HasColumnName("birthdate");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("first_name");
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("last_name");
            entity.Property(e => e.PhoneNumber)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("phone_number");
            entity.Property(e => e.SexId).HasColumnName("sex_id");

            entity.HasOne(d => d.Sex).WithMany(p => p.Clients)
                .HasForeignKey(d => d.SexId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_sex_id");
        });

        modelBuilder.Entity<Day>(entity =>
        {
            entity.HasKey(e => e.DayId).HasName("PK__Day__8B516ABB102D326A");

            entity.ToTable("Day");

            entity.HasIndex(e => e.DayName, "UQ__Day__5D5F26CFA77B5B09").IsUnique();

            entity.Property(e => e.DayId).HasColumnName("day_id");
            entity.Property(e => e.DayName)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("day_name");
        });

        modelBuilder.Entity<Employee>(entity =>
        {
            entity.HasKey(e => e.EmployeeId).HasName("PK__Employee__C52E0BA87991DB99");

            entity.ToTable("Employee");

            entity.HasIndex(e => e.PhoneNumber, "UQ__Employee__A1936A6BE56226DA").IsUnique();

            entity.HasIndex(e => e.Email, "UQ__Employee__AB6E61644BFD2CCB").IsUnique();

            entity.Property(e => e.EmployeeId).HasColumnName("employee_id");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("first_name");
            entity.Property(e => e.LaboratoryId).HasColumnName("laboratory_id");
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("last_name");
            entity.Property(e => e.PhoneNumber)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("phone_number");
            entity.Property(e => e.PositionId).HasColumnName("position_id");

            entity.HasOne(d => d.Laboratory).WithMany(p => p.Employees)
                .HasForeignKey(d => d.LaboratoryId)
                .HasConstraintName("fk_laboratory_e_id");

            entity.HasOne(d => d.Position).WithMany(p => p.Employees)
                .HasForeignKey(d => d.PositionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_position_id");
        });

        modelBuilder.Entity<Laboratory>(entity =>
        {
            entity.HasKey(e => e.LaboratoryId).HasName("PK__Laborato__3A591C740B75E6A2");

            entity.ToTable("Laboratory");

            entity.HasIndex(e => e.PhoneNumber, "UQ__Laborato__A1936A6BB891A831").IsUnique();

            entity.Property(e => e.LaboratoryId)
                .ValueGeneratedNever()
                .HasColumnName("laboratory_id");
            entity.Property(e => e.Address)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("address");
            entity.Property(e => e.CityId).HasColumnName("city_id");
            entity.Property(e => e.PhoneNumber)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("phone_number");

            entity.HasOne(d => d.City).WithMany(p => p.Laboratories)
                .HasForeignKey(d => d.CityId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_city_id");
        });

        modelBuilder.Entity<LaboratorySchedule>(entity =>
        {
            entity.HasKey(e => e.LaboratoryScheduleId).HasName("PK__Laborato__D9868A04601A415E");

            entity.ToTable("LaboratorySchedule");

            entity.Property(e => e.LaboratoryScheduleId).HasColumnName("laboratory_schedule_id");
            entity.Property(e => e.LaboratoryId).HasColumnName("laboratory_id");
            entity.Property(e => e.ScheduleId).HasColumnName("schedule_id");

            entity.HasOne(d => d.Laboratory).WithMany(p => p.LaboratorySchedules)
                .HasForeignKey(d => d.LaboratoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_laboratory_id");

            entity.HasOne(d => d.Schedule).WithMany(p => p.LaboratorySchedules)
                .HasForeignKey(d => d.ScheduleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_schedule_id");
        });

        modelBuilder.Entity<Order>(entity =>
        {
            entity.HasKey(e => e.OrderId).HasName("PK__Order__465962299FA5A25D");

            entity.ToTable("Order");

            entity.Property(e => e.OrderId).HasColumnName("order_id");
            entity.Property(e => e.BiomaterialCollectionDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("biomaterial_collection_date");
            entity.Property(e => e.ClientId).HasColumnName("client_id");
            entity.Property(e => e.EmployeeId).HasColumnName("employee_id");
            entity.Property(e => e.Fullprice).HasColumnName("fullprice");
            entity.Property(e => e.Number).HasColumnName("number");
            entity.Property(e => e.StatusId).HasColumnName("status_id");

            entity.HasOne(d => d.Client).WithMany(p => p.Orders)
                .HasForeignKey(d => d.ClientId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_client_id");

            entity.HasOne(d => d.Employee).WithMany(p => p.Orders)
                .HasForeignKey(d => d.EmployeeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_employee_id");

            entity.HasOne(d => d.Status).WithMany(p => p.Orders)
                .HasForeignKey(d => d.StatusId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_status_id");
        });

        modelBuilder.Entity<OrderAnalysis>(entity =>
        {
            entity.HasKey(e => e.OrderAnalysisId).HasName("PK__OrderAna__D1178634A0CDF0F5");

            entity.ToTable("OrderAnalysis");

            entity.Property(e => e.OrderAnalysisId).HasColumnName("order_analysis_id");
            entity.Property(e => e.AnalysisId).HasColumnName("analysis_id");
            entity.Property(e => e.OrderId).HasColumnName("order_id");

            entity.HasOne(d => d.Analysis).WithMany(p => p.OrderAnalyses)
                .HasForeignKey(d => d.AnalysisId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_analysis_oa_id");

            entity.HasOne(d => d.Order).WithMany(p => p.OrderAnalyses)
                .HasForeignKey(d => d.OrderId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_order_oa_id");
        });

        modelBuilder.Entity<Position>(entity =>
        {
            entity.HasKey(e => e.PositionId).HasName("PK__Position__99A0E7A49586BCCE");

            entity.ToTable("Position");

            entity.HasIndex(e => e.PositionName, "UQ__Position__0030EAD782F8E879").IsUnique();

            entity.Property(e => e.PositionId).HasColumnName("position_id");
            entity.Property(e => e.PositionName)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("position_name");
        });

        modelBuilder.Entity<Schedule>(entity =>
        {
            entity.HasKey(e => e.ScheduleId).HasName("PK__Schedule__C46A8A6F10C7DA44");

            entity.ToTable("Schedule");

            entity.Property(e => e.ScheduleId).HasColumnName("schedule_id");
            entity.Property(e => e.CollectionEndTime).HasColumnName("collection_end_time");
            entity.Property(e => e.DayId).HasColumnName("day_id");
            entity.Property(e => e.EndTime).HasColumnName("end_time");
            entity.Property(e => e.StartTime).HasColumnName("start_time");

            entity.HasOne(d => d.Day).WithMany(p => p.Schedules)
                .HasForeignKey(d => d.DayId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_day_id");
        });

        modelBuilder.Entity<Sex>(entity =>
        {
            entity.HasKey(e => e.SexId).HasName("PK__Sex__989F2F4DB8C8AC26");

            entity.ToTable("Sex");

            entity.HasIndex(e => e.SexName, "UQ__Sex__E6018C1E392B1660").IsUnique();

            entity.Property(e => e.SexId).HasColumnName("sex_id");
            entity.Property(e => e.SexName)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("sex_name");
        });

        modelBuilder.Entity<Status>(entity =>
        {
            entity.HasKey(e => e.StatusId).HasName("PK__Status__3683B5318297DDFE");

            entity.ToTable("Status");

            entity.HasIndex(e => e.StatusName, "UQ__Status__501B3753D1CD84CF").IsUnique();

            entity.Property(e => e.StatusId).HasColumnName("status_id");
            entity.Property(e => e.StatusName)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("status_name");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}